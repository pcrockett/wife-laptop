#!/usr/bin/env bash
#
# For more details about Makesure:
#
# https://github.com/xonixx/makesure
#
@shell bash

@define LAPTOP_USERNAME="${USER}"
@define LAPTOP_HOSTNAME="blueberry"

@define BOTTOM_DEB_NAME="bottom_0.6.6_amd64.deb"
@define BOTTOM_DL_URL="https://github.com/ClementTsang/bottom/releases/download/0.6.6/${BOTTOM_DEB_NAME}"

@define IPTABLES_RULES_VERSION="v1"

@lib

set -Eeuo pipefail

function flathub_install() {
  flatpak install --assumeyes --noninteractive --app "${1}" flathub
}

function command_exists() {
  command -v "${1}" &> /dev/null
}

function service_exists() {
  systemctl list-unit-files --full --type=service | grep --fixed-strings "${1}.service" > /dev/null
}

function user_service_exists() {
  local service_name="${1}"
  systemctl list-unit-files --full --type=service --user | grep --fixed-strings "${service_name}.service" &> /dev/null
}

function flatpak_is_installed() {
  flatpak info "${1}" &> /dev/null
}

function get_sha256() {
  local sha_sum_output
  IFS=" " read -r -a sha_sum_output <<< "$(sha256sum "${1}")"
  # https://github.com/koalaman/shellcheck/wiki/SC2207
  echo "${sha_sum_output[0]}"
}

@goal default
@depends_on repo_initialized initial_system_upgrade software_installed configured

@goal software_installed @private
@depends_on standard_notes_installed bottom_installed signal_installed iptables_persistent_installed
@depends_on gnome_dav_support_shim_installed iptables_rules_placed

@goal configured @private
@depends_on hostname_set iptables_configured bottom_configured tailscale_connected hosts_configured
@depends_on scanner_configured sshd_configured authorized_keys_configured

@goal repo_initialized @private
@reached_if [ -d .state ]
  mkdir .state

@goal apt_updated @private
  sudo apt-get update

@goal apt_upgraded @private
@depends_on apt_updated
  sudo apt-get upgrade --yes

@goal hostname_set @private
@reached_if [ "$(hostname)" = "${LAPTOP_HOSTNAME}" ]
  hostnamectl set-hostname "${LAPTOP_HOSTNAME}"

@goal initial_system_upgrade @private
@depends_on apt_upgraded repo_initialized hostname_set
@reached_if [ -f .state/system_upgrade ]
  echo "Reboot now!"
  touch .state/system_upgrade
  exit 1

@goal standard_notes_installed @private
@reached_if flatpak_is_installed org.standardnotes.standardnotes
@use_lib
  flathub_install org.standardnotes.standardnotes

@goal bottom_downloaded @private
@reached_if [ -f ".state/${BOTTOM_DEB_NAME}" ]
  cd .state || exit 1
  wget "${BOTTOM_DL_URL}"

@goal bottom_installed @private
@use_lib
@reached_if command_exists btm
@depends_on bottom_downloaded
  sudo dpkg --install ".state/${BOTTOM_DEB_NAME}"

@goal signal_installed @private
@reached_if flatpak_is_installed org.signal.Signal
@use_lib
  flathub_install org.signal.Signal

@goal iptables_persistent_installed @private
@use_lib
@depends_on apt_updated
@reached_if service_exists iptables
  sudo apt-get install --yes iptables-persistent

@goal gnome_dav_support_shim_downloaded @private
@reached_if [ -f .state/gnome-dav-support-amd64.zip ]
  # https://github.com/pcrockett/Gnome-DAV-Support-Shim
  cd .state || exit 1
  wget https://github.com/pcrockett/Gnome-DAV-Support-Shim/releases/download/v1.0/gnome-dav-support-amd64.zip

@goal gnome_dav_support_shim_installed @private
@use_lib
@depends_on gnome_dav_support_shim_downloaded
@reached_if user_service_exists gnome-dav-shim
  cd .state || exit 1
  unzip gnome-dav-support-amd64.zip
  ./install.sh
  rm install.sh # Don't want a nondescript `install.sh` hanging around...

@goal iptables_rules_placed @private
@depends_on iptables_persistent_installed
@reached_if [ -f .state/iptables-version ] && [ "$(cat .state/iptables-version)" == "${IPTABLES_RULES_VERSION}" ]
  sudo cp config/iptables/rules.v4 /etc/iptables/
  sudo cp config/iptables/rules.v6 /etc/iptables/
  if [ "$(systemctl is-active iptables)" == "active" ]; then
    sudo systemctl restart iptables
  fi
  if [ "$(systemctl is-active ip6tables)" == "active" ]; then
    sudo systemctl restart ip6tables
  fi
  if [ command_exists tailscale ] && [ tailscale status &> /dev/null ]; then
    sudo tailscale down
    sudo tailscale up --accept-routes
  fi
  echo "${IPTABLES_RULES_VERSION}" > .state/iptables-version

@goal iptables_configured @private
@depends_on iptables_rules_placed
@reached_if [ "$(systemctl is-enabled netfilter-persistent)" == "enabled" ]
  sudo systemctl enable --now iptables
  sudo systemctl enable --now ip6tables

@goal bottom_configured @private
@reached_if [ -L ~/.config/bottom/bottom.toml ]
  bottom_dir=~/.config/bottom
  mkdir --parent "${bottom_dir}"
  rm --force "${bottom_dir}/bottom.toml"
  repo_dir="$(readlink -f .)"
  ln --symbolic "${repo_dir}/config/bottom.toml" "${bottom_dir}/bottom.toml"

@goal tailscale_key_added @private
@reached_if [ -f /etc/apt/trusted.gpg.d/tailscale.gpg ]
  sudo cp ./config/tailscale/tailscale.gpg /etc/apt/trusted.gpg.d/
  sudo chown root:root /etc/apt/trusted.gpg.d/tailscale.gpg

@goal tailscale_list_added @private
@depends_on tailscale_key_added
@reached_if [ -f /etc/apt/sources.list.d/tailscale.list ]
  sudo cp ./config/tailscale/tailscale.list /etc/apt/sources.list.d/
  sudo chown root:root /etc/apt/sources.list.d/tailscale.list
  sudo apt-get update

@goal tailscale_installed @private
@use_lib
@reached_if command_exists tailscale
@depends_on tailscale_list_added
  sudo apt-get install --yes tailscale

@goal tailscale_connected @private
@depends_on tailscale_installed
@reached_if tailscale status &> /dev/null
  sudo tailscale up --accept-routes

@goal hosts_configured @private
@use_lib
@reached_if [ "$(get_sha256 /etc/hosts)" == "$(get_sha256 ./config/hosts)" ]
  sudo cp ./config/hosts /etc/hosts
  sudo chown root:root /etc/hosts

@goal brscan_deb_downloaded @private
@reached_if [ -f ".state/brscan4.amd64.deb" ]
  curl --fail --silent --show-error \
    --output .state/brscan4.amd64.deb \
    --location "https://download.brother.com/welcome/dlf006645/brscan4-0.4.10-1.amd64.deb"

@goal brscan_installed @private
@use_lib
@reached_if command_exists brsaneconfig4
@depends_on brscan_deb_downloaded
  sudo dpkg --install .state/brscan4.amd64.deb

@goal scanner_configured @private
@use_lib
@reached_if .state/printer_configured
@depends_on brscan_installed tailscale_connected
  sudo brsaneconfig4 -a name=Scanner_DCP7055W model=DCP7055W ip=10.34.138.5 || exit 1
  touch .state/printer_configured

@goal sshd_installed @private
@use_lib
@reached_if command_exists sshd
@depends_on apt_updated
  sudo apt-get install --yes openssh-server

@goal sshd_configured @private
@depends_on sshd_installed
  # TODO

@goal authorized_keys_configured @private
@reached_if [ -f ~/.ssh/authorized_keys ] && [ "$(get_sha256 ~/.ssh/authorized_keys)" == "$(get_sha256 ./config/ssh/authorized_keys)" ]
  mkdir --parent ~/.ssh
  cp ./config/ssh/authorized_keys ~/.ssh
  chmod -R go-rwx ~/.ssh

