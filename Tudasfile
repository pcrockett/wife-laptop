#!/usr/bin/env bash
#
# For more details about Tudas:
#
# https://github.com/pcrockett/tudas
#
set -Eeuo pipefail

readonly LAPTOP_HOSTNAME="blueberry"

readonly BOTTOM_VERSION="0.6.8"
readonly BOTTOM_DEB_NAME="bottom_${BOTTOM_VERSION}_amd64.deb"
readonly BOTTOM_DL_URL="https://github.com/ClementTsang/bottom/releases/download/${BOTTOM_VERSION}/${BOTTOM_DEB_NAME}"

@goal default
@depends_on _repo_initialized _initial_system_upgrade _software_installed _configured

@goal _software_installed
@depends_on _standard_notes_installed _bottom_installed _signal_installed _iptables_persistent_installed
@depends_on _gnome_dav_support_shim_installed _iptables_rules_placed _skype_installed _onlyoffice_installed
@depends_on _screen_installed

@goal _configured
@depends_on _hostname_set _iptables_configured _bottom_configured _tailscale_connected _hosts_configured
@depends_on _scanner_configured _sshd_configured _authorized_keys_configured

@goal _repo_initialized
@reached_if [ -d .state ]
  mkdir .state

@goal _apt_updated
  sudo apt-get update

@goal _apt_upgraded
@depends_on _apt_updated
  sudo apt-get upgrade --yes

@goal _hostname_set
@reached_if [ "$(hostname)" = "${LAPTOP_HOSTNAME}" ]
  hostnamectl set-hostname "${LAPTOP_HOSTNAME}"

@goal _initial_system_upgrade
@depends_on _apt_upgraded _repo_initialized _hostname_set
@reached_if [ -f .state/system_upgrade ]
  echo "Reboot now!"
  touch .state/system_upgrade
  exit 1

@goal _standard_notes_installed
@reached_if flatpak_is_installed org.standardnotes.standardnotes
  flathub_install org.standardnotes.standardnotes

@goal _bottom_downloaded
@reached_if [ -f ".state/${BOTTOM_DEB_NAME}" ]
  cd .state || exit 1
  wget "${BOTTOM_DL_URL}"

@goal _bottom_installed
@reached_if command_exists btm
@depends_on _bottom_downloaded
  sudo dpkg --install ".state/${BOTTOM_DEB_NAME}"

@goal _signal_installed
@reached_if flatpak_is_installed org.signal.Signal
  flathub_install org.signal.Signal

@goal _iptables_persistent_installed
@depends_on _apt_updated
@reached_if service_exists iptables
  sudo apt-get install --yes iptables-persistent

@goal _gnome_dav_support_shim_downloaded
@reached_if [ -f .state/gnome-dav-support-amd64.zip ]
  # https://github.com/pcrockett/Gnome-DAV-Support-Shim
  cd .state || exit 1
  wget https://github.com/pcrockett/Gnome-DAV-Support-Shim/releases/download/v1.0/gnome-dav-support-amd64.zip

@goal _gnome_dav_support_shim_installed
@depends_on _gnome_dav_support_shim_downloaded
@reached_if user_service_exists gnome-dav-shim
  cd .state || exit 1
  unzip gnome-dav-support-amd64.zip
  ./install.sh
  rm install.sh # Don't want a nondescript `install.sh` hanging around...

@goal _iptables_rules_placed
@depends_on _iptables_persistent_installed
@reached_if files_are_same config/iptables/rules.v4 /etc/iptables/rules.v4 && files_are_same config/iptables/rules.v6 /etc/iptables/rules.v6
  sudo cp config/iptables/rules.v4 /etc/iptables/
  sudo cp config/iptables/rules.v6 /etc/iptables/
  if [ "$(systemctl is-active iptables)" == "active" ]; then
    sudo systemctl restart iptables
  fi
  if [ "$(systemctl is-active ip6tables)" == "active" ]; then
    sudo systemctl restart ip6tables
  fi
  if command_exists tailscale && tailscale status &> /dev/null; then
    sudo tailscale down
    sudo tailscale up --accept-routes
  fi

@goal _iptables_configured
@depends_on _iptables_rules_placed
@reached_if [ "$(systemctl is-enabled netfilter-persistent)" == "enabled" ]
  sudo systemctl enable --now iptables
  sudo systemctl enable --now ip6tables

@goal _bottom_configured
@reached_if [ -L ~/.config/bottom/bottom.toml ]
  bottom_dir=~/.config/bottom
  mkdir --parent "${bottom_dir}"
  rm --force "${bottom_dir}/bottom.toml"
  repo_dir="$(readlink -f .)"
  ln --symbolic "${repo_dir}/config/bottom.toml" "${bottom_dir}/bottom.toml"

@goal _tailscale_key_added
@reached_if [ -f /etc/apt/trusted.gpg.d/tailscale.gpg ]
  sudo cp ./config/tailscale/tailscale.gpg /etc/apt/trusted.gpg.d/
  sudo chown root:root /etc/apt/trusted.gpg.d/tailscale.gpg

@goal _tailscale_list_added
@depends_on _tailscale_key_added
@reached_if [ -f /etc/apt/sources.list.d/tailscale.list ]
  sudo cp ./config/tailscale/tailscale.list /etc/apt/sources.list.d/
  sudo chown root:root /etc/apt/sources.list.d/tailscale.list
  sudo apt-get update

@goal _tailscale_installed
@reached_if command_exists tailscale
@depends_on _tailscale_list_added
  sudo apt-get install --yes tailscale

@goal _tailscale_connected
@depends_on _tailscale_installed
@reached_if tailscale status &> /dev/null
  sudo tailscale up --accept-routes

@goal _hosts_configured
@reached_if files_are_same /etc/hosts ./config/hosts
  sudo cp ./config/hosts /etc/hosts
  sudo chown root:root /etc/hosts

@goal _brscan_deb_downloaded
@reached_if [ -f ".state/brscan4.amd64.deb" ]
  curl --fail --silent --show-error \
    --output .state/brscan4.amd64.deb \
    --location "https://download.brother.com/welcome/dlf006645/brscan4-0.4.10-1.amd64.deb"

@goal _brscan_installed
@reached_if command_exists brsaneconfig4
@depends_on _brscan_deb_downloaded
  sudo dpkg --install .state/brscan4.amd64.deb

@goal _scanner_configured
@reached_if [ -f .state/printer_configured ]
@depends_on _brscan_installed _tailscale_connected
  sudo brsaneconfig4 -a name=Scanner_DCP7055W model=DCP7055W ip=10.34.138.5 || exit 1
  touch .state/printer_configured

@goal _sshd_installed
@reached_if command_exists sshd
@depends_on _apt_updated
  sudo apt-get install --yes openssh-server

@goal _ssh_host_keys_regenerated
@depends_on _sshd_installed
@reached_if [ -f .state/ssh_host_keys_regenerated ]
  pushd /etc/ssh &> /dev/null || exit 1
  sudo rm ssh_host_*key* || exit 1
  sudo ssh-keygen -t ed25519 -f ssh_host_ed25519_key -N "" < /dev/null || exit 1
  popd &> /dev/null || exit 1
  touch .state/ssh_host_keys_regenerated

@goal _sshd_configured
@depends_on _ssh_host_keys_regenerated
@reached_if files_are_same config/ssh/blueberry.conf /etc/ssh/sshd_config.d/blueberry.conf
  sudo cp config/ssh/blueberry.conf /etc/ssh/sshd_config.d/ || exit 1
  sudo chown root:root /etc/ssh/sshd_config.d/blueberry.conf || exit 1
  sudo systemctl restart sshd

@goal _authorized_keys_configured
@reached_if files_are_same ~/.ssh/authorized_keys ./config/ssh/authorized_keys
  mkdir --parent ~/.ssh
  cp ./config/ssh/authorized_keys ~/.ssh
  chmod -R go-rwx ~/.ssh

@goal _skype_installed
@reached_if flatpak_is_installed com.skype.Client
  flathub_install com.skype.Client

@goal _onlyoffice_installed
@reached_if flatpak_is_installed org.onlyoffice.desktopeditors
  flathub_install org.onlyoffice.desktopeditors

@goal _screen_installed
@reached_if command_exists screen
@depends_on _apt_updated
  sudo apt-get install --yes screen

@lib

function flathub_install() {
  flatpak install --assumeyes --noninteractive --app "${1}" flathub
}

function command_exists() {
  command -v "${1}" &> /dev/null
}

function service_exists() {
  systemctl list-unit-files --full --type=service | grep --fixed-strings "${1}.service" > /dev/null
}

function user_service_exists() {
  local service_name="${1}"
  systemctl list-unit-files --full --type=service --user | grep --fixed-strings "${service_name}.service" &> /dev/null
}

function flatpak_is_installed() {
  flatpak info "${1}" &> /dev/null
}

function get_sha256() {
  test -f "${1}" || return 0

  local sha_sum_output
  IFS=" " read -r -a sha_sum_output <<< "$(sha256sum "${1}")"
  # https://github.com/koalaman/shellcheck/wiki/SC2207
  echo "${sha_sum_output[0]}"
}

function files_are_same() {
  test "$(get_sha256 "${1}")" == "$(get_sha256 "${2}")"
}
